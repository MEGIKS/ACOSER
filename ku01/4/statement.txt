На стандартном потоке ввода вводятся два положительных целых числа ez, mz (ez + mz &leq 63), задающие размер поля порядка в битах
и размер поля мантиссы в битах для представления чисел с плавающей точкой, полностью аналогичному стандарту IEEE 754, но с другими размерами полей.
В этом представлении чисел используются те же принципы, что и в стандарте, то есть поля числа располагаются в последовательности (бит_знака,
порядок, мантисса) от старшего бита к младшему. Порядок хранится со смещением (bias), старший бит мантиссы всегда равен 1 и не хранится.
В представлении поддерживается знаковый ноль, денормализованные числа, бесконечность и "не число" (NAN).
Далее на стандартном потоке ввода вводятся 64-битные целые беззнаковые значения в десятичном представлении, побитово кодирующие
вещественные числа, описанные выше. Если для представления вещественного числа требуется меньше 64 бит, старшие биты вводимых целых
чисел равны 0. Среди вводимых чисел не встречаются денормализованные значения, а также "бесконечность" и "не число".
Преобразуйте каждое введенное число в значение типа double в предположении, что тип double — это IEEE 754 тип двойной точности.
При этом если порядок введенного числа слишком велик для double, преобразуйте его в бесконечность соответствующего знака, а если слишком мал, то в 0
соответствующего знака. Если биты мантиссы введенного числа не помещаются в биты мантиссы типа double, лишние биты мантиссы отбросьте.
Каждое преобразованное число напечатайте на стандартный поток вывода в шестнадцатеричном виде, то есть с помощью форматного преобразования %a.
После каждого числа выводите символ перехода на новую строку.
Описанное выше преобразование однозначно, поэтому ваш ответ будет сравниваться с эталонным на точное совпадение.
В примере ниже параметры 8, 23 задают представление чисел с плавающей точкой, совпадающее с типом float.
ExamplesInput
8 23
1065353216
1073741824
3231711232
1078530010
3645061860
Output
0x1p+0
0x1p+1
-0x1.4p+2
0x1.921fb4p+1
-0x1.8675c8p+51